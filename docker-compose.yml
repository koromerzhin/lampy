version: "3.8"

networks:
  proxylampy:
    driver: overlay
    external: true
  serverlampy:
    driver: overlay
    external: true

volumes:
  traefik_certs:
  portainer_data:
  mariadb_data:
  postgresql_data:

services:
  mercure:
    image: dunglas/mercure:v0.14
    environment:
      MERCURE_PUBLISHER_JWT_KEY: "SDDErzDziEaSFkO"
      MERCURE_SUBSCRIBER_JWT_KEY: "SDDErzDziEaSFkO"
      ALLOW_ANONYMOUS: 1
      PUBLISH_ALLOWED_ORIGINS: "*"
      CORS_ALLOWED_ORIGINS: "*"
    networks:
      - serverlampy
    depends_on:
      - redis
    deploy:
      labels:
        - "traefik.enable=false"
  redis:
    image: redis:7.0.5
    networks:
      - serverlampy
    deploy:
      labels:
        - "traefik.enable=false"
  mariadb:
    image: mariadb:10.9.3
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: example
      TZ: Europe/Paris
    volumes:
      - ${PWD}/mariadb_init:/docker-entrypoint-initdb.d
      - mariadb_data:/var/lib/mysql
      - ${PWD}/dump:/dump
    ports:
      - 3306:3306
    networks:
      - serverlampy
    deploy:
      labels:
        - "traefik.enable=false"
  postgresql:
    image: postgres:15.0
    restart: always
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ${PWD}/postgresql_init:/docker-entrypoint-initdb.d
      - ${PWD}/dump:/dump
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    deploy:
      labels:
        - "traefik.enable=false"
    networks:
      - serverlampy
  mailhog:
    image: mailhog/mailhog:v1.0.1
    networks:
      - serverlampy
      - proxylampy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mailhog.rule=Host(`mailhog.traefik.me`)"
        - "traefik.http.routers.mailhog-tls.tls.domains[0].main=mailhog.traefik.me"
        - "traefik.http.routers.mailhog.tls=true"
        - "traefik.http.services.mailhog.loadbalancer.server.port=8025"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.0
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: example
    depends_on:
      - mariadb
    networks:
      - serverlampy
      - proxylampy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.traefik.me`)"
        - "traefik.http.routers.phpmyadmin-tls.tls.domains[0].main=phpmyadmin.traefik.me"
        - "traefik.http.routers.phpmyadmin.tls=true"
        - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
  portainer:
    image: portainer/portainer-ce:2.16.1
    networks:
      - proxylampy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - portainer_data:/data
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.traefik.me`)"
        - "traefik.http.routers.portainer-tls.tls.domains[0].main=portainer.traefik.me"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
  reverse:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - traefik_certs:/etc/ssl/traefik
    deploy:
      restart_policy:
        condition: none
      labels:
        - "traefik.enable=false"
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.9.4
    environment:
      - TZ=Europe/Paris
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxylampy
    volumes:
      # So that Traefik can listen to the Docker events
      - ${PWD}/config/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/config/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ${PWD}/config/traefik/tls.yml:/etc/traefik/tls.yml
      - ${PWD}/config/traefik/dashboard.yml:/etc/dyn_config/dashboard.yml
      - traefik_certs:/etc/ssl/traefik
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.proxy.rule=Host(`proxy.traefik.me`)"
        - "traefik.http.routers.proxy-tls.tls.domains[0].main=proxy.traefik.me"
        - "traefik.http.routers.proxy.tls=true"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
