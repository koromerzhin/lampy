version: "3.8"

networks:
  proxylampy:
    driver: overlay
    attachable: true
  serverlampy:
    driver: overlay
    attachable: true

volumes:
  traefik_certs:
  portainer_data:
  mariadb_data:
  postgresql_data:

configs:
  traefik_static:
    file: ./config/traefik/traefik.yml
  traefik_dynamic:
    file: ./config/traefik/dynamic/middlewares.yml
  traefik_healthcheck:
    file: ./config/traefik/dynamic/healthcheck.yml

services:
  mercure:
    image: dunglas/mercure:v0.18
    environment:
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY}
      ALLOW_ANONYMOUS: "1"
      PUBLISH_ALLOWED_ORIGINS: "*"
      CORS_ALLOWED_ORIGINS: "*"
    networks:
      - serverlampy
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
  redis:
    image: redis:7.4.2
    networks:
      - serverlampy
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
  mariadb:
    image: mariadb:11.4.2
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Europe/Paris
    volumes:
      - ${PWD}/mariadb_init:/docker-entrypoint-initdb.d
      - mariadb_data:/var/lib/mysql
      - ${PWD}/dump:/dump
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    networks:
      - serverlampy
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=false"
  postgresql:
    image: postgres:17.2
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ${PWD}/postgresql_init:/docker-entrypoint-initdb.d
      - ${PWD}/dump:/dump
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    networks:
      - serverlampy
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=false"
  mailtest:
    image: axllent/mailpit:v1.22
    networks:
      - serverlampy
      - proxylampy
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mailtest.rule=Host(`mailtest.traefik.me`)"
        - "traefik.http.routers.mailtest.entrypoints=websecure"
        - "traefik.http.routers.mailtest.tls=true"
        - "traefik.http.routers.mailtest.middlewares=secure-headers@file,ip-allowlist-local@file"
        - "traefik.http.services.mailtest.loadbalancer.server.port=8025"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.2
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_ARBITRARY: 1
    networks:
      - serverlampy
      - proxylampy
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.traefik.me`)"
        - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
        - "traefik.http.routers.phpmyadmin.tls=true"
        - "traefik.http.routers.phpmyadmin.middlewares=secure-headers@file,ip-allowlist-local@file"
        - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
  portainer:
    image: portainer/portainer-ce:2.26.1
    networks:
      - proxylampy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
      - portainer_data:/data
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.traefik.me`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.routers.portainer.middlewares=secure-headers@file,ip-allowlist-local@file"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
  reverse:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - traefik_certs:/etc/ssl/traefik
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      labels:
        - "traefik.enable=false"
  traefik:
    image: traefik:v3.3.2
    environment:
      TZ: Europe/Paris
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host 
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      - proxylampy
    volumes:
      - ${PWD}/config/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/etc/ssl/traefik:ro
    configs:
      - source: traefik_static
        target: /etc/traefik/traefik.yml
      - source: traefik_dynamic
        target: /etc/traefik/dynamic/middlewares.yml
      - source: traefik_healthcheck
        target: /etc/traefik/dynamic/healthcheck.yml
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.proxy.rule=Host(`proxy.traefik.me`)"
        - "traefik.http.routers.proxy.entrypoints=websecure"
        - "traefik.http.routers.proxy.service=api@internal"
        - "traefik.http.routers.proxy.tls=true"
        - "traefik.http.routers.proxy.middlewares=secure-headers@file,ip-allowlist-local@file"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
